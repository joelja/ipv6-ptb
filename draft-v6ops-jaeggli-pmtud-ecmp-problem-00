Internet Engineering Task Force                               
Internet-Draft                                                
Intended status: Informational                                 
                                       
M. Bylerly
Zynga
M. Hite
Zynga
J. Jaeggli
Fastly


draft-v6ops-jaeggli-pmtud-ecmp-problem-00

Close encounters of the icmp type 2 kind (near misses with ICMPv6 PTB)

Abstract

Introduction

Problem

A common application for stateless load-balancing of TCP or UDP flows is to perform an initial subdivision of flows in front of a stateful load-balancer tier or multiple servers such that the workload can be divided into managable chunks. The division is performed using ECMP forwarding and a stateless but sticky algorythm for hashing the flows across the available paths. This is a form of anycast distribution where all anycast destinations are eqidistant topologically from the upstream router making the last nexthop forwarding decision. In this approach the hash used in path selection has to use available headers, typically IP source/dest/protocol/source port/dest port for TCP or UDP though it could be limited to IP source / dest or in the case of IPv6 IP source/dest/flow-label. 

A problem common to this approach is it's impact on path-mtu-discovery. An ICMP6 type 2 PTB message generated on the path taken by packets originating from a statelessy load balanced server will  have the anycast address as desintation and will be statelessly load-balanced to one of the stateful loadbalancers. While the ICMPv6 PTB message contains as much of the packet that could not be forwarded as possible the payload does not factor into the forwarding decision and it is not possible to reconstruct the results of the inward bound hashing decision (by reverseing the order of the source/dest/source port/dest port/protocol number or equivalent hash).

An example packet flow and topology follow.

ptb -> router ecmp decision -> nexthop for anycast -> L4 or L7 load balancer

	router --> load-balancer 1 --->
		  \\-> load-balancer 2 --->
		   \-> load-balancer N --->

Fig 1.

The typical case where ICMPv6 PTB messages are recieved at the load-balancer where the path MTU from the client to the load-balancer is limited by a tunnel which the client is itself not aware of, in the case of a TCP connection where TLS is employed, the first packet that is likely to exceed a tunnel MTU lower than that specified by the MSS on the client and the load-balancer/server is the serverhello and certificate (With http the client is likely to send the first packet exceeding the MTU given the loquatious nature of http clients). 

Direct experience says that the frequency of PTB messages is fairly low as a percentage of traffic is pretty low, and that says a lot about native vs tunneled multicast deployment and techniques such as happy-eyeballs may actually contribute some amelioration to the IPv6 client experience. Still the expectation is that PMTUD should work and that unecessary breakage of client traffic should work.

Some final oberservations are that it is typically not possible even if potentially desirable to be able to independantly set the TCP mss for different address families. The problem as described does also impact IPv4, however the ability to fragment on wire and the relative rarity of sub-1500 byte MTUs that are not coupled to changes in client behavior (client vpn tunnels for example typically set the MTU accordingly for perfomance reasons) makes the problem sufficiently rare that some depolyments simply choose to ignore it.

Mitgation 





Improvements 


